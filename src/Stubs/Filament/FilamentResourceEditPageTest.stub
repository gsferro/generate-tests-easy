<?php

use {{ pageNamespace }}\{{ pageClass }};
use {{ resourceNamespace }}\{{ resourceClass }};
use {{ modelNamespace }}\{{ modelClass }};
use Livewire\Livewire;

test('{{ pageClass }} page can be rendered', function () {
    // Create a test record
    {{ modelFactorySetup }}
    
    // Create a test user with the necessary permissions
    {{ authSetup }}
    
    // Get the route for the page
    $route = '{{ routePrefix }}/{{ resourceSlug }}/' . $model->id . '/edit';
    
    // Check that the route exists
    expect(Route::has('{{ routePrefix }}.{{ resourceSlug }}.edit'))->toBeTrue();
    
    // Render the page
    $this->get($route)
        ->assertSuccessful();
})->group('filament');

test('{{ pageClass }} page contains the correct Livewire component', function () {
    // Create a test record
    {{ modelFactorySetup }}
    
    // Create a test user with the necessary permissions
    {{ authSetup }}
    
    // Get the route for the page
    $route = '{{ routePrefix }}/{{ resourceSlug }}/' . $model->id . '/edit';
    
    // Render the page
    $response = $this->get($route);
    
    // Check that the page contains the Livewire component
    $response->assertSeeLivewire({{ pageClass }}::class);
})->group('filament');

test('{{ pageClass }} page displays the form with correct fields and values', function () {
    // Create a test record
    {{ modelFactorySetup }}
    
    // Test the Livewire component
    Livewire::test({{ pageClass }}::class, [
        'record' => $model->id,
    ])
        ->assertSuccessful()
        {{ formFieldAssertions }}
        {{ formDataAssertions }};
})->group('filament');

test('{{ pageClass }} page can update an existing record', function () {
    // Create a test record
    {{ modelFactorySetup }}
    
    // Generate test data for update
    {{ modelFactoryUpdateDataSetup }}
    
    // Test the Livewire component
    Livewire::test({{ pageClass }}::class, [
        'record' => $model->id,
    ])
        ->assertSuccessful()
        {{ formFillAssertions }}
        ->call('save')
        ->assertHasNoFormErrors();
    
    // Check that the record was updated in the database
    $this->assertDatabaseHas('{{ tableName }}', {{ databaseAssertions }});
})->group('filament');

test('{{ pageClass }} page validates form data', function () {
    // Create a test record
    {{ modelFactorySetup }}
    
    // Test the Livewire component with invalid data
    Livewire::test({{ pageClass }}::class, [
        'record' => $model->id,
    ])
        ->assertSuccessful()
        {{ invalidFormFillAssertions }}
        ->call('save')
        ->assertHasFormErrors({{ formErrorAssertions }});
})->group('filament');

test('{{ pageClass }} page has cancel button that works', function () {
    // Create a test record
    {{ modelFactorySetup }}
    
    // Test the Livewire component
    Livewire::test({{ pageClass }}::class, [
        'record' => $model->id,
    ])
        ->assertSuccessful()
        ->assertFormExists();
})->group('filament');

{{ customTests }}